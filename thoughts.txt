// sometimes it might make sense to have your context as a hierarchical structure
// (a directory becomes a key)
data.posts['2012']['03'].quotes
// sometimes you want a list of objects that you can query
// -- in which case you need the full metadata, or, the knowledge that
// "2012" signifies a year (we already have this in the objects in Hector, 
// so that's not the issue -- mainly it just makes the tree superfluous
data.posts.all({year: '2012'})

The question becomes, to what extent can you really put all of this stuff in `espy`. Maybe Espy is just fine as a context finder and all enhancements should happen in Hector? True feature parity between context loading in Hector and Draughtsman is impossible anyway, because the latter has to follow certain conventions (data in a `/fixtures` dir, use the same name as the template file etc.) whereas the former can work with arbitrary routes.